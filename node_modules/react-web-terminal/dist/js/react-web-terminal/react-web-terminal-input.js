'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactWebTerminalInputBuffer = require('./react-web-terminal-input-buffer.js');

var _reactWebTerminalInputBuffer2 = _interopRequireDefault(_reactWebTerminalInputBuffer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WebTerminalInput = function (_React$Component) {
  _inherits(WebTerminalInput, _React$Component);

  function WebTerminalInput(props) {
    _classCallCheck(this, WebTerminalInput);

    var _this = _possibleConstructorReturn(this, (WebTerminalInput.__proto__ || Object.getPrototypeOf(WebTerminalInput)).call(this, props));

    _this.state = {
      prompt: props.prompt ? props.prompt : '> '
    };
    return _this;
  }

  _createClass(WebTerminalInput, [{
    key: 'getInput',
    value: function getInput() {
      return this.buffer.getInput();
    }
  }, {
    key: 'resetInputBuffer',
    value: function resetInputBuffer() {
      this.buffer.resetInputBuffer();
    }
  }, {
    key: 'handleKeyDown',
    value: function handleKeyDown(e) {
      this.buffer.handleKeyDown(e);
    }
  }, {
    key: 'onPaste',
    value: function onPaste(e) {
      this.buffer.onPaste(e);
    }
  }, {
    key: 'onCommandEntered',
    value: function onCommandEntered() {
      if (this.props.onCommandEntered) this.props.onCommandEntered();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        { className: 'react-web-terminal-input' },
        _react2.default.createElement(
          'pre',
          null,
          this.state.prompt,
          _react2.default.createElement(_reactWebTerminalInputBuffer2.default, { ref: function ref(buffer) {
              _this2.buffer = buffer;
            }, onCommandEntered: this.onCommandEntered.bind(this) })
        )
      );
    }
  }]);

  return WebTerminalInput;
}(_react2.default.Component);

exports.default = WebTerminalInput;